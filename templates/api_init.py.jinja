""" Contains methods for accessing the API """
from __future__ import annotations

from typing import List, Type
import importlib

from binarylane.console.runners.package import PackageRunner


__all__ = ['commands']
commands : List[Type[PackageRunner]] = []

def register_command(cls: Type[PackageRunner]) -> Type[PackageRunner]:
    commands.append(cls)
    return cls

{% for key, value in endpoint_collections_by_tag | dictsort %}
@register_command
class {{ class_name(key) }}(PackageRunner):
    """Runner for {{key}} API operations"""

    @property
    def package_name(self) -> str:
        return '{{ value.endpoints[0].name.split('_')[0] }}'

    @property
    def package_path(self) -> str:
        return f'.commands.{{ key }}'

{% endfor %}
